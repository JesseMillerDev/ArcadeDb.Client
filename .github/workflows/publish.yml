name: Publish to NuGet

on:
  push:
    branches: [ main ]

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Important for versioning
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Install semantic-release
      run: npm install -g semantic-release @semantic-release/git @semantic-release/changelog @semantic-release/exec
        
    - name: Debug Info
      run: |
        echo "Current directory: $(pwd)"
        echo "Contents of root directory:"
        ls -la
        echo "Contents of src directory:"
        ls -la src/
        echo "Contents of src/ArcadeDb.Client directory:"
        ls -la src/ArcadeDb.Client/
        echo "Finding all csproj files:"
        find . -name "*.csproj"
        echo "Finding all sln files:"
        find . -name "*.sln"
        echo "Full directory tree:"
        tree .
        
    - name: Semantic Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: semantic-release
        
    - name: Restore dependencies
      run: |
        # Try to restore using found solution file
        sln_file=$(find . -name "*.sln" -type f -print -quit)
        echo "Found solution file: $sln_file"
        echo "Solution file contents:"
        cat "$sln_file"
        dotnet restore "$sln_file"
      
    - name: Build
      run: |
        sln_file=$(find . -name "*.sln" -type f -print -quit)
        dotnet build "$sln_file" --no-restore --configuration Release
      
    - name: Create nupkg directory
      run: mkdir -p nupkgs
      
    - name: Pack Projects
      run: |
        # Pack only src projects, not test projects
        for proj in $(find ./src -name "*.csproj"); do
          echo "Found project: $proj"
          echo "Project contents:"
          cat "$proj"
          echo "Packing $proj"
          dotnet pack "$proj" --no-build --configuration Release --output nupkgs
        done
      
    - name: Push to NuGet
      run: dotnet nuget push "nupkgs/*.nupkg" --api-key ${{secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json --skip-duplicate
